##data<-read.csv(x[i], header = TRUE, sep =",")
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##goodData<- data[complete.cases(data),]
##goodData
dat[complete.cases(dat), ]
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2/")
getwd()
x<-list.files("specdata")
x## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
for (i in 70:72)
{
##print (x[i])
##data<-read.csv(x[i], header = TRUE, sep =",")
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##goodData<- data[complete.cases(data),]
##goodData
dat[complete.cases(dat), ]
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
getwd()
x<-list.files("specdata")
x## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
for (i in 70:72)
{
##print (x[i])
##data<-read.csv(x[i], header = TRUE, sep =",")
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##goodData<- data[complete.cases(data),]
##goodData
dat[complete.cases(dat), ]
rm(list=ls())
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean <- function(directory = "specdata", pollutant = "nitrate", id = 1:332)
{
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(file.path(getwd(), directory))
x<-list.files(getwd()) ## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
data<data.frame()
## Go through each file and bind the records to perform some actions
for (i in id)
{
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##now we need only the complete records, no NA's
dat[complete.cases(dat), ]
setwd("..")
round(mean(dat[, pollutant], na.rm=TRUE), digits = 3)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
setwd("..")
pollutantmean("specdata", "sulfate", 1:10)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean <- function(directory = "specdata", pollutant = "nitrate", id = 1:332)
{
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(file.path(getwd(), directory))
x<-list.files(getwd()) ## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
data<data.frame()
## Go through each file and bind the records to perform some actions
for (i in id)
{
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##now we need only the complete records, no NA's
dat[complete.cases(dat), ]
setwd("..")
round(mean(dat[, pollutant], na.rm=TRUE), digits = 3)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean <- function(directory = "specdata", pollutant = "nitrate", id = 1:332)
{
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(file.path(getwd(), directory))
x<-list.files(getwd())
## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
data<data.frame()
## Go through each file and bind the records to perform some actions
for (i in id)
{
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##now we need only the complete records, no NA's
dat[complete.cases(dat), ]
setwd("..")
round(mean(dat[, pollutant], na.rm=TRUE), digits = 3)
x
}
pollutantmean("specdata", "nitrate", 70:72)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean <- function(directory = "specdata", pollutant = "nitrate", id = 1:332)
{
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(file.path(getwd(), directory))
x<-list.files(getwd())
## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
## Go through each file and bind the records to perform some actions
for (i in id)
{
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##now we need only the complete records, no NA's
dat[complete.cases(dat), ]
setwd("..")
round(mean(dat[, pollutant], na.rm=TRUE), digits = 3)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
rm(list=ls())
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
getwd()
x<-list.files("specdata")
x## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
for (i in 70:72)
{
##print (x[i])
##data<-read.csv(x[i], header = TRUE, sep =",")
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##goodData<- data[complete.cases(data),]
##goodData
dat[complete.cases(dat), ]
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# set working directory
setwd(file.path(getwd(), directory))
x<-list.files(getwd()) ## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame
id_length <- length(id)
complete_data <- rep(0, id_len)
j <- 1
for (i in id)
{
dat <- read.csv(x[i],header = TRUE, sep =",")
complete_data[j] <- sum(complete.cases(dat))
j =j+1
}
##now we need only the complete records, no NA's
setwd("..")
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
complete("specdata", 1)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# set working directory
setwd(file.path(getwd(), directory))
x<-list.files(getwd()) ## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame
id_length <- length(id)
complete_data <- rep(0, id_length)
j <- 1
for (i in id)
{
dat <- read.csv(x[i],header = TRUE, sep =",")
complete_data[j] <- sum(complete.cases(dat))
j =j+1
}
##now we need only the complete records, no NA's
setwd("..")
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
complete("specdata", 1)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
pollutantmean("specdata", "sulfate", 34)
rm(list=ls())
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
pollutantmean <- function(directory = "specdata", pollutant = "nitrate", id = 1:332)
{
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(file.path(getwd(), directory))
x<-list.files(getwd())
## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame()
## Go through each file and bind the records to perform some actions
for (i in id)
{
dat <- rbind(dat, read.csv(x[i],header = TRUE, sep =","))
}
##now we need only the complete records, no NA's
dat[complete.cases(dat), ]
setwd("..")
round(mean(dat[, pollutant], na.rm=TRUE), digits = 3)
}
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# set working directory
setwd(file.path(getwd(), directory))
x<-list.files(getwd()) ## now you have a list of files, if you subset this in a loop you can get the files you require
dat <- data.frame
##Need to know size of matrix
id_length <- length(id)
complete_data <- rep(0, id_length)
j <- 1
## In the loop we are checking each file and how many complete cases there are
for (i in id)
{
dat <- read.csv(x[i],header = TRUE, sep =",")
complete_data[j] <- sum(complete.cases(dat))
j =j+1
}
## Need to do this to run the function multiple times.
setwd("..")
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
return(result)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
## variables) required to compute the correlation between
cr <- corr("specdata", 150)
head(cr)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
## Tests
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
setwd("C:/Users/Gopal/Documents/My_Stuff/BigData/2_R_Programming/Week_2")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the complete table
complete_table <- complete("specdata", 1:332)
nobs <- complete_table$nobs
# find the valid ids
ids <- complete_table$id[nobs > threshold]
# get the length of ids vector
id_len <- length(ids)
corr_vector <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for(i in ids) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
corr_vector[j] <- cor(current_file$sulfate, current_file$nitrate, use="complete.obs")
j <- j + 1
}
result <- corr_vector
return(result)
}
## Tests
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
